<?xml version="1.0"?>
<doc>
    <assembly>
        <name>openSourceC.DotNetLibrary.Data</name>
    </assembly>
    <members>
        <member name="T:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions">
            <summary>
            	Adds extension methods to the <see cref="T:DbDataReaderExtensions"/> type.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBinaryNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a
                <see cref="T:byte"/> array.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBinaryNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a
                <see cref="T:byte"/> array.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a Boolean.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBooleanNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                Boolean.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBooleanNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                Boolean.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a byte.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetByteNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable byte.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetByteNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable byte.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a stream of bytes from the specified column, starting at location indicated by
                <i>dataOffset</i>, into the buffer, starting at the location indicated by
                <i>bufferOffset</i>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a single character.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetCharNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a single
                nullable character.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetCharNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a single
                nullable character.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                Reads a stream of characters from the specified column, starting at location
                indicated by <i>dataOffset</i>, into the buffer, starting at the location indicated
                by <i>bufferOffset</i>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of characters to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Returns a <see cref="T:DbDataReader"/> object for the requested column.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>A <see cref="T:DbDataReader"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
            <summary>
            	Gets name of the data type of the specified column.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>A string representing the name of the data type.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.Int32,System.DateTimeKind)">
            <summary>
                Gets the value of the specified column as a <see cref="T:DateTime"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>
            	The value of the specified column with the specified <see cref="T:DateTimeKind"/>.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a <see cref="T:DateTime"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String,System.DateTimeKind)">
            <summary>
                Gets the value of the specified column as a <see cref="T:DateTime"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>
            	The value of the specified column with the specified <see cref="T:DateTimeKind"/>.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDateTimeNullSafe(System.Data.Common.DbDataReader,System.Int32,System.DateTimeKind)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                <see cref="T:DateTime"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>
            	A <see cref="T:Nullable&lt;DateTime&gt;"/> object consisting of the time represented
            	by the value of the specified column and the <b>DateTimeKind</b> value specified by
            	the kind parameter.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDateTimeNullSafe(System.Data.Common.DbDataReader,System.String,System.DateTimeKind)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                <see cref="T:DateTime"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>
            	A <see cref="T:Nullable&lt;DateTime&gt;"/> object consisting of the time represented
            	by the value of the specified column and the <b>DateTimeKind</b> value specified by
            	the kind parameter.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a <see cref="T:Decimal"/>
            	object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDecimalNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                <see cref="T:Decimal"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDecimalNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                <see cref="T:Decimal"/> object.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a double-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDoubleNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                double-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetDoubleNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                double-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetEnum``1(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets the value of the specified column as a enumerator.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetEnum``1(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a enumerator.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetEnumNullSafe``1(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                enumerator.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetEnumNullSafe``1(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                enumerator.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the data type of the specified column.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The data type of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a single-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetFloatNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                single-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetFloatNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                single-precision floating point number.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a globally-unique identifier (GUID).
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetGuidNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                globally-unique identifier (GUID).
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetGuidNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                globally-unique identifier (GUID).
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt16NullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                16-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt16NullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                16-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt32NullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                32-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt32NullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                32-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt64NullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                64-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetInt64NullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as a nullable
                64-bit signed integer.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as an instance of <see cref="T:System.String"/>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetStringNullSafe(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as an instance of
                <see cref="T:System.String"/>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetStringNullSafe(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets a <see cref="T:DBNull"/> aware value of the specified column as an instance of
                <see cref="T:System.String"/>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
            <summary>
                Gets the value of the specified column as an instance of <see cref="T:System.Object"/>.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
            <summary>
            	Gets a value that indicates whether the column contains nonexistent or missing
            	values.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String)">
            <summary>
            	Gets a value that indicates whether the column contains nonexistent or missing
            	values.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbDataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
            <summary>
            	An asynchronous version of <see cref="M:IsDBNull"/>, which gets a value that
            	indicates whether the column contains non-existent or missing values. Optionally,
            	sends a notification that operations should be cancelled.
            </summary>
            <param name="dataReader">The <see cref="T:DbDataReader"/> to extend.</param>
            <param name="name">The name of the column.</param>
            <param name="cancellationToken">The cancellation instruction, which propagates a
            	notification that operations should be canceled. This does not guarantee the
            	cancellation. A setting of <b>CancellationToken.None</b> makes this method
            	equivalent to <see cref="M:IsDBNullAsync(string)"/> . The returned task must be marked as cancelled.</param>
            <returns></returns>
        </member>
        <member name="T:openSourceC.DotNetLibrary.Data.DbParams`2">
            <summary>
            	Adds <see cref="T:Nullable&lt;T&gt;"/> type parameter support to a
            	<typeparamref name="TDbCommand"/> object to make it easier to use.
            </summary>
            <typeparam name="TDbCommand">The <see cref="P:openSourceC.DotNetLibrary.Data.DbParams`2.DbCommand"/> type.</typeparam>
            <typeparam name="TDbParameter"></typeparam>
        </member>
        <member name="F:openSourceC.DotNetLibrary.Data.DbParams`2.dateTimeBaseline">
            <summary>Contains a baseline date of 01/01/1970.</summary>
        </member>
        <member name="F:openSourceC.DotNetLibrary.Data.DbParams`2._cmd">
            <summary>The current <see cref="T:TDbCommand"/> object.</summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.#ctor(`0)">
            <summary>
            	Creates an instance of DbParams.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.Dispose">
            <summary>
                Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by this instance and optionally
                releases the managed resources.
            </summary>
            <param name="disposing">
                If true, the method has been called directly or indirectly by a user's code.
                Managed and unmanaged resources can be disposed. If false, the method has been
                called by the runtime from inside the finalizer and you should not reference
                other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.DbParams`2.DbCommand">
            <summary>
            	Gets the <typeparamref name="TDbCommand"/> object that was wrapped.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.IsNull(System.String)">
            <summary>
            	Gets a value indicating whether or not the value of the parameter is
            	<see cref="T:System.DBNull"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns <b>true</b> if the value of the parameter is <see cref="T:System.DBNull"/>,
            	<b>false</b> if it is not.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiString(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddAnsiStringFixedLength(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBinary(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBinary(System.String,System.Int32,System.Boolean,System.Byte[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBinary(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBinary(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBoolean(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBoolean(System.String,System.Boolean,System.Nullable{System.Boolean},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBoolean(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddBoolean(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddByte(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddByte(System.String,System.Boolean,System.Nullable{System.Byte},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddByte(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddByte(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddCurrency(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddCurrency(System.String,System.Boolean,System.Nullable{System.Decimal},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddCurrency(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddCurrency(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDate(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDate(System.String,System.Boolean,System.Nullable{System.DateTime},System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDate(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDate(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTime(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTime(System.String,System.Boolean,System.Nullable{System.DateTime},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTime(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTime(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTimeOffset(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTimeOffset(System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTimeOffset(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDateTimeOffset(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDecimal(System.String,System.Byte,System.Byte,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDecimal(System.String,System.Byte,System.Byte,System.Boolean,System.Nullable{System.Decimal},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDecimal(System.String,System.Byte,System.Byte,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDecimal(System.String,System.Byte,System.Byte,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDouble(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDouble(System.String,System.Boolean,System.Nullable{System.Double},System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDouble(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddDouble(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddEnum``1(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddEnum``1(System.String,System.Boolean,``0,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddEnum``1(System.String,System.Boolean,System.Nullable{``0},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddEnum``1(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddEnum``1(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddFloat(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddFloat(System.String,System.Boolean,System.Nullable{System.Single},System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddFloat(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddFloat(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddGuid(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddGuid(System.String,System.Boolean,System.Nullable{System.Guid},System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddGuid(System.String,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddGuid(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddGuid(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt16(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt16(System.String,System.Boolean,System.Nullable{System.Int16},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt16(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt16(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt32(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt32(System.String,System.Boolean,System.Nullable{System.Int32},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt32(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt32(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt64(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt64(System.String,System.Boolean,System.Nullable{System.Int64},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt64(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddInt64(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddSByte(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddSByte(System.String,System.Boolean,System.Nullable{System.SByte},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddSByte(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddSByte(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddString(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddStringFixedLength(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddTimeSpan(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddTimeSpan(System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddTimeSpan(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddTimeSpan(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt16(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt16(System.String,System.Boolean,System.Nullable{System.UInt16},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt16(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt16(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt32(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt32(System.String,System.Boolean,System.Nullable{System.UInt32},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt32(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt32(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt64(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt64(System.String,System.Boolean,System.Nullable{System.UInt64},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt64(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddUInt64(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddVariant(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddVariant(System.String,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddVariant(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.AddVariant(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetBinary(System.String)">
            <summary>
            	Return the value of a parameter that is of a variable-length stream of binary data.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetBoolean(System.String)">
            <summary>
            	Return the value of a parameter that is of a simple type representing Boolean
            	values of <b>true</b> or <b>false</b>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetByte(System.String)">
            <summary>
            	Return the value of a parameter that is of a 8-bit unsigned integer ranging in
            	value from 0 to 255.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetCurrency(System.String)">
            <summary>
            	Return the value of a parameter that is of a currency value ranging from
            	-2^63 (or -922,337,203,685,477.5808) to 2^63 -1 (or +922,337,203,685,477.5807) with
            	an accuracy to a ten-thousandth of a currency unit.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetDateTime(System.String,System.DateTimeKind)">
            <summary>
            	Return the value of a parameter that is of a type representing a date and time value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetDateTimeOffset(System.String)">
            <summary>
            	Return the value of a parameter that is of a type representing a date and time value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetDecimal(System.String)">
            <summary>
            	Return the value of a parameter that is of a simple type representing values
            	ranging from 1.0 x 10^-28 to approximately 7.9 x 10^28 with 28-29 significant digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetDouble(System.String)">
            <summary>
            	Return the value of a parameter that is of a floating point type representing
            	values ranging from approximately 5.0 x 10^-324 to 1.7 x 10^308 with a precision of
            	15-16 digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetGuid(System.String)">
            <summary>
            	Return the value of a parameter that is of a globally unique identifier (or GUID) type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetEnum``1(System.String)">
            <summary>
                Return the value of a parameter that is of a <typeparamref name="TEnum"/> type.
            </summary>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <typeparamref name="TEnum"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetInt16(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	16-bit integers with values between -32,768 and 32,767.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetInt32(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	32-bit integers with values between -2,147,483,648 and 2,147,483,647.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetInt64(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	64-bit integers with values between -9,223,372,036,854,775,808 and 9,223,372,036,854,775,807.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetSByte(System.String)">
            <summary>
            	Return the value of a parameter that is of a integral type representing signed
            	8-bit integer with values between -128 and 127.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetSingle(System.String)">
            <summary>
            	Return the value of a parameter that is of a floating point type representing
            	values ranging from approximately 1.5 x 10^-45 to 3.4 x 10^38 with a precision of
            	7 digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetString(System.String)">
            <summary>
            	Return the value of a parameter that is of a character string type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a string.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetTimeSpan(System.String)">
            <summary>
            	Return the value of a parameter that is of a type representing a timespan value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetUInt16(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	16-bit integers with values between -32,768 and 32,767.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt16"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetUInt32(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing unsigned
            	32-bit integers with values between 0 and 4,294,967,295.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetUInt64(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing unsigned
            	64-bit integers with values between 0 and 18,446,744,073,709,551,615.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetVariant(System.String)">
            <summary>
            	Return the value of a parameter that is of a variant type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Int32,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Byte,System.Byte,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.GetValue(System.String)">
            <summary>
            	Returns the value of a parameter.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns the parameter value.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParams`2.NormalizeParameterName(System.String)">
            <summary>
            	Returns the name of a parameter normalized for the command client.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns the name of a parameter normalized for the command client.
            </returns>
        </member>
        <member name="T:openSourceC.DotNetLibrary.Data.DbParamsBase`3">
            <summary>
            	Adds <see cref="T:Nullable&lt;T&gt;"/> type parameter support to a
            	<typeparamref name="TDbCommand"/> object to make it easier to use.
            </summary>
            <typeparam name="TDbParams"></typeparam>
            <typeparam name="TDbCommand">The <see cref="P:openSourceC.DotNetLibrary.Data.DbParamsBase`3.DbCommand"/> type.</typeparam>
            <typeparam name="TDbParameter"></typeparam>
        </member>
        <member name="F:openSourceC.DotNetLibrary.Data.DbParamsBase`3.dateTimeBaseline">
            <summary>Contains a baseline date of 01/01/1970.</summary>
        </member>
        <member name="F:openSourceC.DotNetLibrary.Data.DbParamsBase`3._cmd">
            <summary>The current <see cref="T:TDbCommand"/> object.</summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.#ctor(`1)">
            <summary>
            	Creates an instance of DbParamsBase.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.Dispose">
            <summary>
                Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by this instance and optionally
                releases the managed resources.
            </summary>
            <param name="disposing">
                If true, the method has been called directly or indirectly by a user's code.
                Managed and unmanaged resources can be disposed. If false, the method has been
                called by the runtime from inside the finalizer and you should not reference
                other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.DbParamsBase`3.DbCommand">
            <summary>
            	Gets the <typeparamref name="TDbCommand"/> object that was wrapped.
            </summary>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.IsNull(System.String)">
            <summary>
            	Gets a value indicating whether or not the value of the parameter is
            	<see cref="T:System.DBNull"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns <b>true</b> if the value of the parameter is <see cref="T:System.DBNull"/>,
            	<b>false</b> if it is not.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiString(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length non-Unicode character string
            	(varchar(max)), to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddAnsiStringFixedLength(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length ANSI string to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBinary(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBinary(System.String,System.Int32,System.Boolean,System.Byte[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBinary(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBinary(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable-length stream of binary data to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBoolean(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBoolean(System.String,System.Boolean,System.Nullable{System.Boolean},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBoolean(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddBoolean(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing Boolean values of <b>true</b> or <b>false</b> to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddByte(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddByte(System.String,System.Boolean,System.Nullable{System.Byte},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddByte(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddByte(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing 8-bit unsigned integer ranging in value from 0 to 255
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddCurrency(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddCurrency(System.String,System.Boolean,System.Nullable{System.Decimal},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddCurrency(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddCurrency(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a currency value ranging from -2^63
            	(or -922,337,203,685,477.5808) to 2^63 - 1 (or +922,337,203,685,477.5807) with an
            	accuracy to a ten-thousandth of a currency unit to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDate(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDate(System.String,System.Boolean,System.Nullable{System.DateTime},System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDate(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDate(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a date and time data parameter ranging in value from January 1, 1753 to
            	December 31, 9999 to an accuracy of 3.33 milliseconds to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTime(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTime(System.String,System.Boolean,System.Nullable{System.DateTime},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTime(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTime(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTimeOffset(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTimeOffset(System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTimeOffset(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDateTimeOffset(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a date and time value to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDecimal(System.String,System.Byte,System.Byte,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDecimal(System.String,System.Byte,System.Byte,System.Boolean,System.Nullable{System.Decimal},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDecimal(System.String,System.Byte,System.Byte,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDecimal(System.String,System.Byte,System.Byte,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing values ranging from 1.0 x 10^-28 to approximately
            	7.9 x 10^28 with 28-29 significant digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDouble(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDouble(System.String,System.Boolean,System.Nullable{System.Double},System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDouble(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddDouble(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	5.0 x 10^-324 to 1.7 x 10^308 with a precision of 15-16 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddEnum``1(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddEnum``1(System.String,System.Boolean,``0,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddEnum``1(System.String,System.Boolean,System.Nullable{``0},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddEnum``1(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddEnum``1(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a <typeparamref name="TEnum"/> type to the command
            	object.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddFloat(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddFloat(System.String,System.Boolean,System.Nullable{System.Single},System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddFloat(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddFloat(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a floating point parameter representing values ranging from approximately
            	1.5 x 10^-45 to 3.4 x 10^38 with a precision of 7 digits to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddGuid(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddGuid(System.String,System.Boolean,System.Nullable{System.Guid},System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddGuid(System.String,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddGuid(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddGuid(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a globally unique identifier (or GUID) parameter to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt16(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt16(System.String,System.Boolean,System.Nullable{System.Int16},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt16(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt16(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 16-bit integers with values between -32,768 and
            	32,767 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt32(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt32(System.String,System.Boolean,System.Nullable{System.Int32},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt32(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt32(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 32-bit integers with values between
            	-2,147,483,648 and 2,147,483,647 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt64(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt64(System.String,System.Boolean,System.Nullable{System.Int64},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt64(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddInt64(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 64-bit integers with values between
            	-9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddSByte(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddSByte(System.String,System.Boolean,System.Nullable{System.SByte},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddSByte(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddSByte(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing signed 8-bit integers with values between -128 and 127
            	to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddString(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variable length Unicode character string to the
            	command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.Nullable{System.Char},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.Boolean,System.Char[],System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddStringFixedLength(System.String,System.Int32,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a fixed length Unicode character string to the command
            	object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddTimeSpan(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddTimeSpan(System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddTimeSpan(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddTimeSpan(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a timespan data parameter based on a 24-hour clock. The value range is 00:00:00
            	through 23:59:59.9999999 with an accuracy of 100 nanoseconds.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt16(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt16(System.String,System.Boolean,System.Nullable{System.UInt16},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt16(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt16(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 16-bit integers with values between 0 and
            	65,535 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt32(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt32(System.String,System.Boolean,System.Nullable{System.UInt32},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt32(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt32(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 32-bit integers with values between 0 and
            	4,294,967,295 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt64(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt64(System.String,System.Boolean,System.Nullable{System.UInt64},System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt64(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddUInt64(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing unsigned 64-bit integers with values between 0 and
            	18,446,744,073,709,551,615 to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddVariant(System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddVariant(System.String,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddVariant(System.String,System.String,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.AddVariant(System.String,System.String,System.Boolean,System.Data.ParameterDirection)">
            <summary>
            	Add a parameter representing a variant type to the command object.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <param name="sourceColumnIsNullable">Indicates whether the source column is nullable.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>Returns a <typeparamref name="TDbParameter"/> object.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetBinary(System.String)">
            <summary>
            	Return the value of a parameter that is of a variable-length stream of binary data.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetBoolean(System.String)">
            <summary>
            	Return the value of a parameter that is of a simple type representing Boolean
            	values of <b>true</b> or <b>false</b>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetByte(System.String)">
            <summary>
            	Return the value of a parameter that is of a 8-bit unsigned integer ranging in
            	value from 0 to 255.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetCurrency(System.String)">
            <summary>
            	Return the value of a parameter that is of a currency value ranging from
            	-2^63 (or -922,337,203,685,477.5808) to 2^63 -1 (or +922,337,203,685,477.5807) with
            	an accuracy to a ten-thousandth of a currency unit.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetDateTime(System.String,System.DateTimeKind)">
            <summary>
            	Return the value of a parameter that is of a type representing a date and time value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="kind">One of the <see cref="T:System.DateTimeKind"/> values.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetDateTimeOffset(System.String)">
            <summary>
            	Return the value of a parameter that is of a type representing a date and time value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetDecimal(System.String)">
            <summary>
            	Return the value of a parameter that is of a simple type representing values
            	ranging from 1.0 x 10^-28 to approximately 7.9 x 10^28 with 28-29 significant digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetDouble(System.String)">
            <summary>
            	Return the value of a parameter that is of a floating point type representing
            	values ranging from approximately 5.0 x 10^-324 to 1.7 x 10^308 with a precision of
            	15-16 digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetGuid(System.String)">
            <summary>
            	Return the value of a parameter that is of a globally unique identifier (or GUID) type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetEnum``1(System.String)">
            <summary>
                Return the value of a parameter that is of a <typeparamref name="TEnum"/> type.
            </summary>
            <typeparam name="TEnum">The enum type to return.</typeparam>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <typeparamref name="TEnum"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetInt16(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	16-bit integers with values between -32,768 and 32,767.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetInt32(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	32-bit integers with values between -2,147,483,648 and 2,147,483,647.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetInt64(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	64-bit integers with values between -9,223,372,036,854,775,808 and 9,223,372,036,854,775,807.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetSByte(System.String)">
            <summary>
            	Return the value of a parameter that is of a integral type representing signed
            	8-bit integer with values between -128 and 127.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetSingle(System.String)">
            <summary>
            	Return the value of a parameter that is of a floating point type representing
            	values ranging from approximately 1.5 x 10^-45 to 3.4 x 10^38 with a precision of
            	7 digits.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetString(System.String)">
            <summary>
            	Return the value of a parameter that is of a character string type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a string.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetTimeSpan(System.String)">
            <summary>
            	Return the value of a parameter that is of a type representing a timespan value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetUInt16(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing signed
            	16-bit integers with values between -32,768 and 32,767.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt16"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetUInt32(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing unsigned
            	32-bit integers with values between 0 and 4,294,967,295.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetUInt64(System.String)">
            <summary>
            	Return the value of a parameter that is of an integral type representing unsigned
            	64-bit integers with values between 0 and 18,446,744,073,709,551,615.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter as a nullable <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetVariant(System.String)">
            <summary>
            	Return the value of a parameter that is of a variant type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>Returns the value of the parameter.</returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Int32,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="size"> The size of the parameter (width of the column). </param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.CreateParameter(System.Nullable{System.Data.DbType},System.String,System.Byte,System.Byte,System.Boolean,System.Object,System.Data.ParameterDirection)">
            <summary>
            	Create and returns a <typeparamref name="TDbParameter"/> object.
            </summary>
            <param name="dbType">The <see cref="T:System.Data.DbType"/>.</param>
            <param name="parameterName">The name of the parameter to create.</param>
            <param name="precision">Gets or sets the maximum number of digits used to represent the value.</param>
            <param name="scale">Gets or sets the number of decimal places to which value is resolved.</param>
            <param name="isNullable">Indicates whether the parameter accepts null values.</param>
            <param name="value">The value of the parameter.</param>
            <param name="direction">The parameter direction. (optional)</param>
            <returns>
            	A <typeparamref name="TDbParameter"/> object.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.GetValue(System.String)">
            <summary>
            	Returns the value of a parameter.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns the parameter value.
            </returns>
        </member>
        <member name="M:openSourceC.DotNetLibrary.Data.DbParamsBase`3.NormalizeParameterName(System.String)">
            <summary>
            	Returns the name of a parameter normalized for the command client.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            	Returns the name of a parameter normalized for the command client.
            </returns>
        </member>
        <member name="T:openSourceC.DotNetLibrary.Data.SR">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.Exception_on_column">
            <summary>
              Looks up a localized string similar to Exception occured on column {0}: [{1}]..
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.Type_mismatch_on_column">
            <summary>
              Looks up a localized string similar to Type mismatch on column {0}: [{1}]..
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.Type_mismatch_on_parameter">
            <summary>
              Looks up a localized string similar to Type mismatch on parameter {0}..
            </summary>
        </member>
        <member name="P:openSourceC.DotNetLibrary.Data.SR.Unknown_column">
            <summary>
              Looks up a localized string similar to Unknown column: [{0}].
            </summary>
        </member>
    </members>
</doc>
